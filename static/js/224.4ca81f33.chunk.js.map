{"version":3,"file":"static/js/224.4ca81f33.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","components/PomodoroTimer.js","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","// frontend/src/components/PomodoroTimer.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, ProgressBar, Modal } from 'react-bootstrap';\r\n\r\nconst PomodoroTimer = () => {\r\n  const initialTime = 25 * 60; // 25 minutes\r\n  const [timeLeft, setTimeLeft] = useState(initialTime);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isActive && timeLeft > 0) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && isActive) {\r\n      setIsActive(false);\r\n      setShowModal(true);\r\n    }\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [isActive, timeLeft]);\r\n\r\n  const startTimer = () => {\r\n    if (timeLeft > 0) {\r\n      setIsActive(true);\r\n    }\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    setIsActive(false);\r\n    clearInterval(intervalRef.current);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsActive(false);\r\n    clearInterval(intervalRef.current);\r\n    setTimeLeft(initialTime);\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    resetTimer();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4 text-center\">\r\n      <h2 className=\"mb-3\">Pomodoro Timer</h2>\r\n      <h3>{formatTime(timeLeft)}</h3>\r\n      <ProgressBar\r\n        now={(timeLeft / initialTime) * 100}\r\n        label={`${Math.floor((timeLeft / initialTime) * 100)}%`}\r\n        className=\"mb-3\"\r\n        animated={isActive}\r\n        variant={\r\n          timeLeft > initialTime * 0.5\r\n            ? \"success\"\r\n            : timeLeft > initialTime * 0.2\r\n            ? \"warning\"\r\n            : \"danger\"\r\n        }\r\n      />\r\n      <div className=\"mb-3\">\r\n        <Button variant=\"success\" onClick={startTimer} disabled={isActive || timeLeft === 0}>\r\n          Start\r\n        </Button>{' '}\r\n        <Button variant=\"warning\" onClick={pauseTimer} disabled={!isActive}>\r\n          Pause\r\n        </Button>{' '}\r\n        <Button variant=\"danger\" onClick={resetTimer}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Modal for notifying when time is up */}\r\n      <Modal show={showModal} onHide={handleCloseModal} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Time's Up!</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Your Pomodoro session has ended. Take a short break and then get back to work!\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_ref","ref","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","props","_jsx","role","classNames","width","children","ProgressBar","React","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","map","child","cloneElement","displayName","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","position","top","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","ModalBody","as","Component","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","transition","backdropTransition","renderDialog","dialogProps","onClick","onMouseUp","onMouseDown","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","PomodoroTimer","initialTime","timeLeft","setTimeLeft","isActive","setIsActive","showModal","setShowModal","intervalRef","setInterval","prev","clearInterval","resetTimer","handleCloseModal","_jsxs","time","seconds","floor","formatTime","Button","startTimer","disabled","pauseTimer","func","index","hasChildOfType","type","toArray","some"],"sourceRoot":""}