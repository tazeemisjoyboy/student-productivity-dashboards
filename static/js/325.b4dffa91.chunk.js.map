{"version":3,"file":"static/js/325.b4dffa91.chunk.js","mappings":"4KAKA,MAkHA,EAlHoBA,KAClB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAGvCG,EAAAA,EAAAA,YAAU,KACWC,WACjB,MAAMC,EAAOC,EAAAA,EAAKC,YAClB,IAAKF,EAAM,OAEX,MAAMG,GAAIC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UAAUC,EAAAA,EAAAA,IAAM,SAAU,KAAMP,EAAKQ,OAChDC,EAAAA,EAAAA,IAAWN,GAAIO,IACjC,MAAMC,EAAY,GAClBD,EAAcE,SAASC,IACrBF,EAAUG,KAAK,CAAEC,GAAIF,EAAIE,MAAOF,EAAIG,QAAS,IAE/CtB,EAASiB,EAAU,GAGH,EAGpBM,EAAY,GACX,IA6CH,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,kBAGrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLH,UAAU,eACVI,YAAY,mBACZC,MAAO5B,EACP6B,SAAWC,GAAM7B,EAAW6B,EAAEC,OAAOH,UAEvCH,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBS,QAvD1B7B,UACd,IAAKH,EAAQiC,OAAQ,OAErB,MAAM7B,EAAOC,EAAAA,EAAKC,YAClB,GAAKF,EAKL,UACQ8B,EAAAA,EAAAA,KAAOzB,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SAAU,CACpCyB,KAAMnC,EACNoC,WAAW,EACXC,OAAQjC,EAAKQ,IACb0B,UAAW,IAAIC,OAEjBtC,EAAW,GACb,CAAE,MAAOuC,GACPC,QAAQD,MAAM,qBAAsBA,EACtC,MAdEE,MAAM,sCAcR,EAoCyDlB,SAAC,iBAMxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SACvB3B,EAAM8C,KAAKC,IACVtB,EAAAA,EAAAA,MAAA,MAEEC,UAAW,sEACTqB,EAAKR,UAAY,wBAA0B,IAC1CZ,SAAA,EAEHC,EAAAA,EAAAA,KAAA,QACEoB,MAAO,CAAEC,OAAQ,UAAWC,eAAgBH,EAAKR,UAAY,eAAiB,QAC9EJ,QAASA,IAhDF7B,OAAOgB,EAAIiB,KAC5B,IACE,MAAMY,GAAU/B,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,QAASS,SAC3B8B,EAAAA,EAAAA,IAAUD,EAAS,CAAEZ,WAAYA,GACzC,CAAE,MAAOI,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GA0CyBU,CAAWN,EAAKzB,GAAIyB,EAAKR,WAAWZ,SAElDoB,EAAKT,QAERV,EAAAA,EAAAA,KAAA,UACEF,UAAU,wBACVS,QAASA,IA5CF7B,WACjB,IACE,MAAM6C,GAAU/B,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,QAASS,SAC3BgC,EAAAA,EAAAA,IAAUH,EAClB,CAAE,MAAOR,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAsCyBY,CAAWR,EAAKzB,IAAIK,SACpC,aAdIoB,EAAKzB,UAoBZ,C,4EC9GV,MAWMkC,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXxD,GAAOyD,EAAAA,EAAAA,IAAQT,GAGR3C,GAAKqD,EAAAA,EAAAA,IAAaV,E","sources":["components/TaskManager.js","firebase.js"],"sourcesContent":["// frontend/src/components/TaskManager.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { collection, addDoc, query, onSnapshot, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\r\nimport { db, auth } from '../firebase';\r\n\r\nconst TaskManager = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  // Fetch tasks from Firestore when the component mounts\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      const q = query(collection(db, \"tasks\"), where(\"userId\", \"==\", user.uid));\r\n      const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n        const tasksData = [];\r\n        querySnapshot.forEach((doc) => {\r\n          tasksData.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        setTasks(tasksData);\r\n      });\r\n\r\n      return unsubscribe; // Cleanup listener\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Add a task to Firestore\r\n  const addTask = async () => {\r\n    if (!newTask.trim()) return;\r\n\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      alert(\"You must be logged in to add tasks.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addDoc(collection(db, \"tasks\"), {\r\n        text: newTask,\r\n        completed: false,\r\n        userId: user.uid, // Associate task with the logged-in user\r\n        createdAt: new Date(),\r\n      });\r\n      setNewTask('');\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n\r\n  // Toggle task completion in Firestore\r\n  const toggleTask = async (id, completed) => {\r\n    try {\r\n      const taskRef = doc(db, \"tasks\", id);\r\n      await updateDoc(taskRef, { completed: !completed });\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  // Delete a task from Firestore\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const taskRef = doc(db, \"tasks\", id);\r\n      await deleteDoc(taskRef);\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-3\">Task Manager</h2>\r\n\r\n      {/* Add Task Input */}\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter a new task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-primary\" onClick={addTask}>\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      {/* Task List */}\r\n      <ul className=\"list-group\">\r\n        {tasks.map((task) => (\r\n          <li\r\n            key={task.id}\r\n            className={`list-group-item d-flex justify-content-between align-items-center ${\r\n              task.completed ? 'bg-success text-white' : ''\r\n            }`}\r\n          >\r\n            <span\r\n              style={{ cursor: 'pointer', textDecoration: task.completed ? 'line-through' : 'none' }}\r\n              onClick={() => toggleTask(task.id, task.completed)}\r\n            >\r\n              {task.text}\r\n            </span>\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => deleteTask(task.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManager;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA1zh9o2y7kiza91j8A6Ib1FNngRocC-74\",\r\n  authDomain: \"studyzodiac.firebaseapp.com\",\r\n  projectId: \"studyzodiac\",\r\n  storageBucket: \"studyzodiac.firebasestorage.app\",\r\n  messagingSenderId: \"823362295915\",\r\n  appId: \"1:823362295915:web:8bb90caf4ba9b53062392e\",\r\n  measurementId: \"G-4LR13WMSJN\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Export Firebase services\r\nconst auth = getAuth(app);\r\n\r\nexport { auth };\r\nexport const db = getFirestore(app);"],"names":["TaskManager","tasks","setTasks","useState","newTask","setNewTask","useEffect","async","user","auth","currentUser","q","query","collection","db","where","uid","onSnapshot","querySnapshot","tasksData","forEach","doc","push","id","data","fetchTasks","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","trim","addDoc","text","completed","userId","createdAt","Date","error","console","alert","map","task","style","cursor","textDecoration","taskRef","updateDoc","toggleTask","deleteDoc","deleteTask","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","getFirestore"],"sourceRoot":""}